# Why legacy-peer-deps=true is needed for Vercel:
#
# 1. next-auth@^4.24.11 resolves to 4.24.12 which declares nodemailer@^7.0.7 as peerOptional
# 2. Our app only uses Google OAuth (no email functionality), so nodemailer isn't needed
# 3. npm 7+ (used by Vercel) has strict peer dependency resolution:
#    - It treats peerOptional dependencies differently than npm 6
#    - Without legacy-peer-deps, npm 7+ fails when peerOptional deps can't be resolved
# 4. In Vercel's build environment:
#    - Vercel runs `npm install` automatically during deployment
#    - Without this config, the build fails with peer dependency conflicts
# 5. legacy-peer-deps=true tells npm to use npm 6 behavior:
#    - Ignore peerOptional dependencies that aren't explicitly installed
#    - Allows the build to succeed even though nodemailer isn't a direct dependency
#
# Alternative: We added nodemailer@^7.0.7 to optionalDependencies as a backup,
# but legacy-peer-deps ensures compatibility across different npm versions.
legacy-peer-deps=true

